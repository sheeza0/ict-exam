window.libpannellum=(function(window,document,undefined){'use strict';function Renderer(container){var canvas=document.createElement('canvas');canvas.style.width=canvas.style.height='100%';container.appendChild(canvas);var program,gl,vs,fs;var fallbackImgSize;var world;var vtmps;var pose;var image,imageType,dynamic;var texCoordBuffer,cubeVertBuf,cubeVertTexCoordBuf,cubeVertIndBuf;var globalParams;this.init=function(_image,_imageType,_dynamic,haov,vaov,voffset,callback,params){if(_imageType===undefined)
_imageType='equirectangular';if(_imageType!='equirectangular'&&_imageType!='cubemap'&&_imageType!='multires'){console.log('Error: invalid image type specified!');throw{type:'config error'};}
imageType=_imageType;image=_image;dynamic=_dynamic;globalParams=params||{};if(program){if(vs){gl.detachShader(program,vs);gl.deleteShader(vs);}
if(fs){gl.detachShader(program,fs);gl.deleteShader(fs);}
gl.bindBuffer(gl.ARRAY_BUFFER,null);gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,null);if(program.texture)
gl.deleteTexture(program.texture);if(program.nodeCache)
for(var i=0;i<program.nodeCache.length;i++)
gl.deleteTexture(program.nodeCache[i].texture);gl.deleteProgram(program);program=undefined;}
pose=undefined;var s;var faceMissing=false;var cubeImgWidth;if(imageType=='cubemap'){for(s=0;s<6;s++){if(image[s].width>0){if(cubeImgWidth===undefined)
cubeImgWidth=image[s].width;if(cubeImgWidth!=image[s].width)
console.log('Cube faces have inconsistent widths: '+cubeImgWidth+' vs. '+image[s].width);}else
faceMissing=true;}}
function fillMissingFaces(imgSize){if(faceMissing){var nbytes=imgSize*imgSize*4;var imageArray=new Uint8ClampedArray(nbytes);var rgb=params.backgroundColor?params.backgroundColor:[0,0,0];rgb[0]*=255;rgb[1]*=255;rgb[2]*=255;for(var i=0;i<nbytes;i++){imageArray[i++]=rgb[0];imageArray[i++]=rgb[1];imageArray[i++]=rgb[2];}
var backgroundSquare=new ImageData(imageArray,imgSize,imgSize);for(s=0;s<6;s++){if(image[s].width==0)
image[s]=backgroundSquare;}}}
if(!(imageType=='cubemap'&&(cubeImgWidth&(cubeImgWidth-1))!==0&&(navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 8_/)||navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 9_/)||navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 10_/)||navigator.userAgent.match(/Trident.*rv[ :]*11\./)))){if(!gl)
gl=canvas.getContext('experimental-webgl',{alpha:false,depth:false});if(gl&&gl.getError()==1286)
handleWebGLError1286();}
if(!gl&&((imageType=='multires'&&image.hasOwnProperty('fallbackPath'))||imageType=='cubemap')&&('WebkitAppearance'in document.documentElement.style||navigator.userAgent.match(/Trident.*rv[ :]*11\./)||navigator.appVersion.indexOf('MSIE 10')!==-1)){if(world){container.removeChild(world);}
world=document.createElement('div');world.className='pnlm-world';var path;if(image.basePath){path=image.basePath+image.fallbackPath;}else{path=image.fallbackPath;}
var sides=['f','r','b','l','u','d'];var loaded=0;var onLoad=function(){var faceCanvas=document.createElement('canvas');faceCanvas.className='pnlm-face pnlm-'+sides[this.side]+'face';world.appendChild(faceCanvas);var faceContext=faceCanvas.getContext('2d');faceCanvas.style.width=this.width+4+'px';faceCanvas.style.height=this.height+4+'px';faceCanvas.width=this.width+4;faceCanvas.height=this.height+4;faceContext.drawImage(this,2,2);var imgData=faceContext.getImageData(0,0,faceCanvas.width,faceCanvas.height);var data=imgData.data;var i;var j;for(i=2;i<faceCanvas.width-2;i++){for(j=0;j<4;j++){data[(i+faceCanvas.width)*4+j]=data[(i+faceCanvas.width*2)*4+j];data[(i+faceCanvas.width*(faceCanvas.height-2))*4+j]=data[(i+faceCanvas.width*(faceCanvas.height-3))*4+j];}}
for(i=2;i<faceCanvas.height-2;i++){for(j=0;j<4;j++){data[(i*faceCanvas.width+1)*4+j]=data[(i*faceCanvas.width+2)*4+j];data[((i+1)*faceCanvas.width-2)*4+j]=data[((i+1)*faceCanvas.width-3)*4+j];}}
for(j=0;j<4;j++){data[(faceCanvas.width+1)*4+j]=data[(faceCanvas.width*2+2)*4+j];data[(faceCanvas.width*2-2)*4+j]=data[(faceCanvas.width*3-3)*4+j];data[(faceCanvas.width*(faceCanvas.height-2)+1)*4+j]=data[(faceCanvas.width*(faceCanvas.height-3)+2)*4+j];data[(faceCanvas.width*(faceCanvas.height-1)-2)*4+j]=data[(faceCanvas.width*(faceCanvas.height-2)-3)*4+j];}
for(i=1;i<faceCanvas.width-1;i++){for(j=0;j<4;j++){data[i*4+j]=data[(i+faceCanvas.width)*4+j];data[(i+faceCanvas.width*(faceCanvas.height-1))*4+j]=data[(i+faceCanvas.width*(faceCanvas.height-2))*4+j];}}
for(i=1;i<faceCanvas.height-1;i++){for(j=0;j<4;j++){data[(i*faceCanvas.width)*4+j]=data[(i*faceCanvas.width+1)*4+j];data[((i+1)*faceCanvas.width-1)*4+j]=data[((i+1)*faceCanvas.width-2)*4+j];}}
for(j=0;j<4;j++){data[j]=data[(faceCanvas.width+1)*4+j];data[(faceCanvas.width-1)*4+j]=data[(faceCanvas.width*2-2)*4+j];data[(faceCanvas.width*(faceCanvas.height-1))*4+j]=data[(faceCanvas.width*(faceCanvas.height-2)+1)*4+j];data[(faceCanvas.width*faceCanvas.height-1)*4+j]=data[(faceCanvas.width*(faceCanvas.height-1)-2)*4+j];}
faceContext.putImageData(imgData,0,0);incLoaded.call(this);};var incLoaded=function(){if(this.width>0){if(fallbackImgSize===undefined)
fallbackImgSize=this.width;if(fallbackImgSize!=this.width)
console.log('Fallback faces have inconsistent widths: '+fallbackImgSize+' vs. '+this.width);}else
faceMissing=true;loaded++;if(loaded==6){fallbackImgSize=this.width;container.appendChild(world);callback();}};faceMissing=false;for(s=0;s<6;s++){var faceImg=new Image();faceImg.crossOrigin=globalParams.crossOrigin?globalParams.crossOrigin:'anonymous';faceImg.side=s;faceImg.onload=onLoad;faceImg.onerror=incLoaded;if(imageType=='multires'){faceImg.src=path.replace('%s',sides[s])+'.'+image.extension;}else{faceImg.src=image[s].src;}}
fillMissingFaces(fallbackImgSize);return;}else if(!gl){console.log('Error: no WebGL support detected!');throw{type:'no webgl'};}
if(imageType=='cubemap')
fillMissingFaces(cubeImgWidth);if(image.basePath){image.fullpath=image.basePath+image.path;}else{image.fullpath=image.path;}
image.invTileResolution=1/image.tileResolution;var vertices=createCube();vtmps=[];for(s=0;s<6;s++){vtmps[s]=vertices.slice(s*12,s*12+12);vertices=createCube();}
var maxWidth=0;if(imageType=='equirectangular'){maxWidth=gl.getParameter(gl.MAX_TEXTURE_SIZE);if(Math.max(image.width/2,image.height)>maxWidth){console.log('Error: The image is too big; it\'s '+image.width+'px wide, '+'but this device\'s maximum supported size is '+(maxWidth*2)+'px.');throw{type:'webgl size error',width:image.width,maxWidth:maxWidth*2};}}else if(imageType=='cubemap'){if(cubeImgWidth>gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE)){console.log('Error: The image is too big; it\'s '+cubeImgWidth+'px wide, '+'but this device\'s maximum supported size is '+maxWidth+'px.');throw{type:'webgl size error',width:cubeImgWidth,maxWidth:maxWidth};}}
if(params!==undefined&&(params.horizonPitch!==undefined||params.horizonRoll!==undefined))
pose=[params.horizonPitch==undefined?0:params.horizonPitch,params.horizonRoll==undefined?0:params.horizonRoll];var glBindType=gl.TEXTURE_2D;gl.viewport(0,0,gl.drawingBufferWidth,gl.drawingBufferHeight);if(gl.getShaderPrecisionFormat){var precision=gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.HIGH_FLOAT);if(precision&&precision.precision<1){fragEquiCubeBase=fragEquiCubeBase.replace('highp','mediump');}}
vs=gl.createShader(gl.VERTEX_SHADER);var vertexSrc=v;if(imageType=='multires'){vertexSrc=vMulti;}
gl.shaderSource(vs,vertexSrc);gl.compileShader(vs);fs=gl.createShader(gl.FRAGMENT_SHADER);var fragmentSrc=fragEquirectangular;if(imageType=='cubemap'){glBindType=gl.TEXTURE_CUBE_MAP;fragmentSrc=fragCube;}else if(imageType=='multires'){fragmentSrc=fragMulti;}
gl.shaderSource(fs,fragmentSrc);gl.compileShader(fs);program=gl.createProgram();gl.attachShader(program,vs);gl.attachShader(program,fs);gl.linkProgram(program);if(!gl.getShaderParameter(vs,gl.COMPILE_STATUS))
console.log(gl.getShaderInfoLog(vs));if(!gl.getShaderParameter(fs,gl.COMPILE_STATUS))
console.log(gl.getShaderInfoLog(fs));if(!gl.getProgramParameter(program,gl.LINK_STATUS))
console.log(gl.getProgramInfoLog(program));gl.useProgram(program);program.drawInProgress=false;var color=params.backgroundColor?params.backgroundColor:[0,0,0];gl.clearColor(color[0],color[1],color[2],1.0);gl.clear(gl.COLOR_BUFFER_BIT);program.texCoordLocation=gl.getAttribLocation(program,'a_texCoord');gl.enableVertexAttribArray(program.texCoordLocation);if(imageType!='multires'){if(!texCoordBuffer)
texCoordBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,texCoordBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array([-1,1,1,1,1,-1,-1,1,1,-1,-1,-1]),gl.STATIC_DRAW);gl.vertexAttribPointer(program.texCoordLocation,2,gl.FLOAT,false,0,0);program.aspectRatio=gl.getUniformLocation(program,'u_aspectRatio');gl.uniform1f(program.aspectRatio,gl.drawingBufferWidth/gl.drawingBufferHeight);program.psi=gl.getUniformLocation(program,'u_psi');program.theta=gl.getUniformLocation(program,'u_theta');program.f=gl.getUniformLocation(program,'u_f');program.h=gl.getUniformLocation(program,'u_h');program.v=gl.getUniformLocation(program,'u_v');program.vo=gl.getUniformLocation(program,'u_vo');program.rot=gl.getUniformLocation(program,'u_rot');gl.uniform1f(program.h,haov/(Math.PI*2.0));gl.uniform1f(program.v,vaov/Math.PI);gl.uniform1f(program.vo,voffset/Math.PI*2);if(imageType=='equirectangular'){program.backgroundColor=gl.getUniformLocation(program,'u_backgroundColor');gl.uniform4fv(program.backgroundColor,color.concat([1]));}
program.texture=gl.createTexture();gl.bindTexture(glBindType,program.texture);if(imageType=='cubemap'){gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X,0,gl.RGB,gl.RGB,gl.UNSIGNED_BYTE,image[1]);gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X,0,gl.RGB,gl.RGB,gl.UNSIGNED_BYTE,image[3]);gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y,0,gl.RGB,gl.RGB,gl.UNSIGNED_BYTE,image[4]);gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,0,gl.RGB,gl.RGB,gl.UNSIGNED_BYTE,image[5]);gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z,0,gl.RGB,gl.RGB,gl.UNSIGNED_BYTE,image[0]);gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,0,gl.RGB,gl.RGB,gl.UNSIGNED_BYTE,image[2]);}else{if(image.width<=maxWidth){gl.uniform1i(gl.getUniformLocation(program,'u_splitImage'),0);gl.texImage2D(glBindType,0,gl.RGB,gl.RGB,gl.UNSIGNED_BYTE,image);}else{gl.uniform1i(gl.getUniformLocation(program,'u_splitImage'),1);var cropCanvas=document.createElement('canvas');cropCanvas.width=image.width/2;cropCanvas.height=image.height;var cropContext=cropCanvas.getContext('2d');cropContext.drawImage(image,0,0);var cropImage=cropContext.getImageData(0,0,image.width/2,image.height);gl.texImage2D(glBindType,0,gl.RGB,gl.RGB,gl.UNSIGNED_BYTE,cropImage);program.texture2=gl.createTexture();gl.activeTexture(gl.TEXTURE1);gl.bindTexture(glBindType,program.texture2);gl.uniform1i(gl.getUniformLocation(program,'u_image1'),1);cropContext.drawImage(image,-image.width/2,0);cropImage=cropContext.getImageData(0,0,image.width/2,image.height);gl.texImage2D(glBindType,0,gl.RGB,gl.RGB,gl.UNSIGNED_BYTE,cropImage);gl.texParameteri(glBindType,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(glBindType,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.texParameteri(glBindType,gl.TEXTURE_MIN_FILTER,gl.LINEAR);gl.texParameteri(glBindType,gl.TEXTURE_MAG_FILTER,gl.LINEAR);gl.activeTexture(gl.TEXTURE0);}}
gl.texParameteri(glBindType,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(glBindType,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.texParameteri(glBindType,gl.TEXTURE_MIN_FILTER,gl.LINEAR);gl.texParameteri(glBindType,gl.TEXTURE_MAG_FILTER,gl.LINEAR);}else{program.vertPosLocation=gl.getAttribLocation(program,'a_vertCoord');gl.enableVertexAttribArray(program.vertPosLocation);if(!cubeVertBuf)
cubeVertBuf=gl.createBuffer();if(!cubeVertTexCoordBuf)
cubeVertTexCoordBuf=gl.createBuffer();if(!cubeVertIndBuf)
cubeVertIndBuf=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,cubeVertTexCoordBuf);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array([0,0,1,0,1,1,0,1]),gl.STATIC_DRAW);gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,cubeVertIndBuf);gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),gl.STATIC_DRAW);program.perspUniform=gl.getUniformLocation(program,'u_perspMatrix');program.cubeUniform=gl.getUniformLocation(program,'u_cubeMatrix');program.level=-1;program.currentNodes=[];program.nodeCache=[];program.nodeCacheTimestamp=0;}
var err=gl.getError();if(err!==0){console.log('Error: Something went wrong with WebGL!',err);throw{type:'webgl error'};}
callback();};this.destroy=function(){if(container!==undefined){if(canvas!==undefined&&container.contains(canvas)){container.removeChild(canvas);}
if(world!==undefined&&container.contains(world)){container.removeChild(world);}}
if(gl){var extension=gl.getExtension('WEBGL_lose_context');if(extension)
extension.loseContext();}};this.resize=function(){var pixelRatio=window.devicePixelRatio||1;canvas.width=canvas.clientWidth*pixelRatio;canvas.height=canvas.clientHeight*pixelRatio;if(gl){if(gl.getError()==1286)
handleWebGLError1286();gl.viewport(0,0,gl.drawingBufferWidth,gl.drawingBufferHeight);if(imageType!='multires'){gl.uniform1f(program.aspectRatio,canvas.clientWidth/canvas.clientHeight);}}};this.resize();this.setPose=function(horizonPitch,horizonRoll){pose=[horizonPitch,horizonRoll];};this.render=function(pitch,yaw,hfov,params){var focal,i,s,roll=0;if(params===undefined)
params={};if(params.roll)
roll=params.roll;if(pose!==undefined){var horizonPitch=pose[0],horizonRoll=pose[1];var orig_pitch=pitch,orig_yaw=yaw,x=Math.cos(horizonRoll)*Math.sin(pitch)*Math.sin(horizonPitch)+
Math.cos(pitch)*(Math.cos(horizonPitch)*Math.cos(yaw)+
Math.sin(horizonRoll)*Math.sin(horizonPitch)*Math.sin(yaw)),y=-Math.sin(pitch)*Math.sin(horizonRoll)+
Math.cos(pitch)*Math.cos(horizonRoll)*Math.sin(yaw),z=Math.cos(horizonRoll)*Math.cos(horizonPitch)*Math.sin(pitch)+
Math.cos(pitch)*(-Math.cos(yaw)*Math.sin(horizonPitch)+
Math.cos(horizonPitch)*Math.sin(horizonRoll)*Math.sin(yaw));pitch=Math.asin(Math.max(Math.min(z,1),-1));yaw=Math.atan2(y,x);var v=[Math.cos(orig_pitch)*(Math.sin(horizonRoll)*Math.sin(horizonPitch)*Math.cos(orig_yaw)-
Math.cos(horizonPitch)*Math.sin(orig_yaw)),Math.cos(orig_pitch)*Math.cos(horizonRoll)*Math.cos(orig_yaw),Math.cos(orig_pitch)*(Math.cos(horizonPitch)*Math.sin(horizonRoll)*Math.cos(orig_yaw)+
Math.sin(orig_yaw)*Math.sin(horizonPitch))],w=[-Math.cos(pitch)*Math.sin(yaw),Math.cos(pitch)*Math.cos(yaw)];var roll_adj=Math.acos(Math.max(Math.min((v[0]*w[0]+v[1]*w[1])/(Math.sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2])*Math.sqrt(w[0]*w[0]+w[1]*w[1])),1),-1));if(v[2]<0)
roll_adj=2*Math.PI-roll_adj;roll+=roll_adj;}
if(!gl&&(imageType=='multires'||imageType=='cubemap')){s=fallbackImgSize/2;var transforms={f:'translate3d(-'+(s+2)+'px, -'+(s+2)+'px, -'+s+'px)',b:'translate3d('+(s+2)+'px, -'+(s+2)+'px, '+s+'px) rotateX(180deg) rotateZ(180deg)',u:'translate3d(-'+(s+2)+'px, -'+s+'px, '+(s+2)+'px) rotateX(270deg)',d:'translate3d(-'+(s+2)+'px, '+s+'px, -'+(s+2)+'px) rotateX(90deg)',l:'translate3d(-'+s+'px, -'+(s+2)+'px, '+(s+2)+'px) rotateX(180deg) rotateY(90deg) rotateZ(180deg)',r:'translate3d('+s+'px, -'+(s+2)+'px, -'+(s+2)+'px) rotateY(270deg)'};focal=1/Math.tan(hfov/2);var zoom=focal*canvas.clientWidth/2+'px';var transform='perspective('+zoom+') translateZ('+zoom+') rotateX('+pitch+'rad) rotateY('+yaw+'rad) ';var faces=Object.keys(transforms);for(i=0;i<6;i++){var face=world.querySelector('.pnlm-'+faces[i]+'face');if(!face)
continue;face.style.webkitTransform=transform+transforms[faces[i]];face.style.transform=transform+transforms[faces[i]];}
return;}
if(imageType!='multires'){var vfov=2*Math.atan(Math.tan(hfov*0.5)/(gl.drawingBufferWidth/gl.drawingBufferHeight));focal=1/Math.tan(vfov*0.5);gl.uniform1f(program.psi,yaw);gl.uniform1f(program.theta,pitch);gl.uniform1f(program.rot,roll);gl.uniform1f(program.f,focal);if(dynamic===true){if(imageType=='equirectangular'){gl.bindTexture(gl.TEXTURE_2D,program.texture);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGB,gl.RGB,gl.UNSIGNED_BYTE,image);}}
gl.drawArrays(gl.TRIANGLES,0,6);}else{var perspMatrix=makePersp(hfov,gl.drawingBufferWidth/gl.drawingBufferHeight,0.1,100.0);checkZoom(hfov);var matrix=identityMatrix3();matrix=rotateMatrix(matrix,-roll,'z');matrix=rotateMatrix(matrix,-pitch,'x');matrix=rotateMatrix(matrix,yaw,'y');matrix=makeMatrix4(matrix);gl.uniformMatrix4fv(program.perspUniform,false,new Float32Array(transposeMatrix4(perspMatrix)));gl.uniformMatrix4fv(program.cubeUniform,false,new Float32Array(transposeMatrix4(matrix)));var rotPersp=rotatePersp(perspMatrix,matrix);program.nodeCache.sort(multiresNodeSort);if(program.nodeCache.length>200&&program.nodeCache.length>program.currentNodes.length+50){var removed=program.nodeCache.splice(200,program.nodeCache.length-200);for(var j=0;j<removed.length;j++){gl.deleteTexture(removed[j].texture);}}
program.currentNodes=[];var sides=['f','b','u','d','l','r'];for(s=0;s<6;s++){var ntmp=new MultiresNode(vtmps[s],sides[s],1,0,0,image.fullpath);testMultiresNode(rotPersp,ntmp,pitch,yaw,hfov);}
program.currentNodes.sort(multiresNodeRenderSort);for(i=pendingTextureRequests.length-1;i>=0;i--){if(program.currentNodes.indexOf(pendingTextureRequests[i].node)===-1){pendingTextureRequests[i].node.textureLoad=false;pendingTextureRequests.splice(i,1);}}
if(pendingTextureRequests.length===0){for(i=0;i<program.currentNodes.length;i++){var node=program.currentNodes[i];if(!node.texture&&!node.textureLoad){node.textureLoad=true;setTimeout(processNextTile,0,node);break;}}}
multiresDraw();}
if(params.returnImage!==undefined){return canvas.toDataURL('image/png');}};this.isLoading=function(){if(gl&&imageType=='multires'){for(var i=0;i<program.currentNodes.length;i++){if(!program.currentNodes[i].textureLoaded){return true;}}}
return false;};this.getCanvas=function(){return canvas;};function multiresNodeSort(a,b){if(a.level==1&&b.level!=1){return-1;}
if(b.level==1&&a.level!=1){return 1;}
return b.timestamp-a.timestamp;}
function multiresNodeRenderSort(a,b){if(a.level!=b.level){return a.level-b.level;}
return a.diff-b.diff;}
function multiresDraw(){if(!program.drawInProgress){program.drawInProgress=true;gl.clear(gl.COLOR_BUFFER_BIT);for(var i=0;i<program.currentNodes.length;i++){if(program.currentNodes[i].textureLoaded>1){gl.bindBuffer(gl.ARRAY_BUFFER,cubeVertBuf);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(program.currentNodes[i].vertices),gl.STATIC_DRAW);gl.vertexAttribPointer(program.vertPosLocation,3,gl.FLOAT,false,0,0);gl.bindBuffer(gl.ARRAY_BUFFER,cubeVertTexCoordBuf);gl.vertexAttribPointer(program.texCoordLocation,2,gl.FLOAT,false,0,0);gl.bindTexture(gl.TEXTURE_2D,program.currentNodes[i].texture);gl.drawElements(gl.TRIANGLES,6,gl.UNSIGNED_SHORT,0);}}
program.drawInProgress=false;}}
function MultiresNode(vertices,side,level,x,y,path){this.vertices=vertices;this.side=side;this.level=level;this.x=x;this.y=y;this.path=path.replace('%s',side).replace('%l',level).replace('%x',x).replace('%y',y);}
function testMultiresNode(rotPersp,node,pitch,yaw,hfov){if(checkSquareInView(rotPersp,node.vertices)){var v=node.vertices;var x=v[0]+v[3]+v[6]+v[9];var y=v[1]+v[4]+v[7]+v[10];var z=v[2]+v[5]+v[8]+v[11];var r=Math.sqrt(x*x+y*y+z*z);var theta=Math.asin(z/r);var phi=Math.atan2(y,x);var ydiff=phi-yaw;ydiff+=(ydiff>Math.PI)?-2*Math.PI:(ydiff<-Math.PI)?2*Math.PI:0;ydiff=Math.abs(ydiff);node.diff=Math.acos(Math.sin(pitch)*Math.sin(theta)+Math.cos(pitch)*Math.cos(theta)*Math.cos(ydiff));var inCurrent=false;for(var k=0;k<program.nodeCache.length;k++){if(program.nodeCache[k].path==node.path){inCurrent=true;program.nodeCache[k].timestamp=program.nodeCacheTimestamp++;program.nodeCache[k].diff=node.diff;program.currentNodes.push(program.nodeCache[k]);break;}}
if(!inCurrent){node.timestamp=program.nodeCacheTimestamp++;program.currentNodes.push(node);program.nodeCache.push(node);}
if(node.level<program.level){var cubeSize=image.cubeResolution*Math.pow(2,node.level-image.maxLevel);var numTiles=Math.ceil(cubeSize*image.invTileResolution)-1;var doubleTileSize=cubeSize%image.tileResolution*2;var lastTileSize=(cubeSize*2)%image.tileResolution;if(lastTileSize===0){lastTileSize=image.tileResolution;}
if(doubleTileSize===0){doubleTileSize=image.tileResolution*2;}
var f=0.5;if(node.x==numTiles||node.y==numTiles){f=1.0-image.tileResolution/(image.tileResolution+lastTileSize);}
var i=1.0-f;var children=[];var vtmp,ntmp;var f1=f,f2=f,f3=f,i1=i,i2=i,i3=i;if(lastTileSize<image.tileResolution){if(node.x==numTiles&&node.y!=numTiles){f2=0.5;i2=0.5;if(node.side=='d'||node.side=='u'){f3=0.5;i3=0.5;}}else if(node.x!=numTiles&&node.y==numTiles){f1=0.5;i1=0.5;if(node.side=='l'||node.side=='r'){f3=0.5;i3=0.5;}}}
if(doubleTileSize<=image.tileResolution){if(node.x==numTiles){f1=0;i1=1;if(node.side=='l'||node.side=='r'){f3=0;i3=1;}}
if(node.y==numTiles){f2=0;i2=1;if(node.side=='d'||node.side=='u'){f3=0;i3=1;}}}
vtmp=[v[0],v[1],v[2],v[0]*f1+v[3]*i1,v[1]*f+v[4]*i,v[2]*f3+v[5]*i3,v[0]*f1+v[6]*i1,v[1]*f2+v[7]*i2,v[2]*f3+v[8]*i3,v[0]*f+v[9]*i,v[1]*f2+v[10]*i2,v[2]*f3+v[11]*i3];ntmp=new MultiresNode(vtmp,node.side,node.level+1,node.x*2,node.y*2,image.fullpath);children.push(ntmp);if(!(node.x==numTiles&&doubleTileSize<=image.tileResolution)){vtmp=[v[0]*f1+v[3]*i1,v[1]*f+v[4]*i,v[2]*f3+v[5]*i3,v[3],v[4],v[5],v[3]*f+v[6]*i,v[4]*f2+v[7]*i2,v[5]*f3+v[8]*i3,v[0]*f1+v[6]*i1,v[1]*f2+v[7]*i2,v[2]*f3+v[8]*i3];ntmp=new MultiresNode(vtmp,node.side,node.level+1,node.x*2+1,node.y*2,image.fullpath);children.push(ntmp);}
if(!(node.x==numTiles&&doubleTileSize<=image.tileResolution)&&!(node.y==numTiles&&doubleTileSize<=image.tileResolution)){vtmp=[v[0]*f1+v[6]*i1,v[1]*f2+v[7]*i2,v[2]*f3+v[8]*i3,v[3]*f+v[6]*i,v[4]*f2+v[7]*i2,v[5]*f3+v[8]*i3,v[6],v[7],v[8],v[9]*f1+v[6]*i1,v[10]*f+v[7]*i,v[11]*f3+v[8]*i3];ntmp=new MultiresNode(vtmp,node.side,node.level+1,node.x*2+1,node.y*2+1,image.fullpath);children.push(ntmp);}
if(!(node.y==numTiles&&doubleTileSize<=image.tileResolution)){vtmp=[v[0]*f+v[9]*i,v[1]*f2+v[10]*i2,v[2]*f3+v[11]*i3,v[0]*f1+v[6]*i1,v[1]*f2+v[7]*i2,v[2]*f3+v[8]*i3,v[9]*f1+v[6]*i1,v[10]*f+v[7]*i,v[11]*f3+v[8]*i3,v[9],v[10],v[11]];ntmp=new MultiresNode(vtmp,node.side,node.level+1,node.x*2,node.y*2+1,image.fullpath);children.push(ntmp);}
for(var j=0;j<children.length;j++){testMultiresNode(rotPersp,children[j],pitch,yaw,hfov);}}}}
function createCube(){return[-1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,-1,1,1,1,1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,1,1,1,-1,1,1,1,1,-1,1,1,-1,-1];}
function identityMatrix3(){return[1,0,0,0,1,0,0,0,1];}
function rotateMatrix(m,angle,axis){var s=Math.sin(angle);var c=Math.cos(angle);if(axis=='x'){return[m[0],c*m[1]+s*m[2],c*m[2]-s*m[1],m[3],c*m[4]+s*m[5],c*m[5]-s*m[4],m[6],c*m[7]+s*m[8],c*m[8]-s*m[7]];}
if(axis=='y'){return[c*m[0]-s*m[2],m[1],c*m[2]+s*m[0],c*m[3]-s*m[5],m[4],c*m[5]+s*m[3],c*m[6]-s*m[8],m[7],c*m[8]+s*m[6]];}
if(axis=='z'){return[c*m[0]+s*m[1],c*m[1]-s*m[0],m[2],c*m[3]+s*m[4],c*m[4]-s*m[3],m[5],c*m[6]+s*m[7],c*m[7]-s*m[6],m[8]];}}
function makeMatrix4(m){return[m[0],m[1],m[2],0,m[3],m[4],m[5],0,m[6],m[7],m[8],0,0,0,0,1];}
function transposeMatrix4(m){return[m[0],m[4],m[8],m[12],m[1],m[5],m[9],m[13],m[2],m[6],m[10],m[14],m[3],m[7],m[11],m[15]];}
function makePersp(hfov,aspect,znear,zfar){var fovy=2*Math.atan(Math.tan(hfov/2)*gl.drawingBufferHeight/gl.drawingBufferWidth);var f=1/Math.tan(fovy/2);return[f/aspect,0,0,0,0,f,0,0,0,0,(zfar+znear)/(znear-zfar),(2*zfar*znear)/(znear-zfar),0,0,-1,0];}
function processLoadedTexture(img,tex){gl.bindTexture(gl.TEXTURE_2D,tex);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGB,gl.RGB,gl.UNSIGNED_BYTE,img);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.bindTexture(gl.TEXTURE_2D,null);}
var pendingTextureRequests=[];var loadTexture=(function(){var cacheTop=4;var textureImageCache={};var crossOrigin;function TextureImageLoader(){var self=this;this.texture=this.callback=null;this.image=new Image();this.image.crossOrigin=crossOrigin?crossOrigin:'anonymous';var loadFn=(function(){if(self.image.width>0&&self.image.height>0){processLoadedTexture(self.image,self.texture);self.callback(self.texture,true);}else{self.callback(self.texture,false);}
releaseTextureImageLoader(self);});this.image.addEventListener('load',loadFn);this.image.addEventListener('error',loadFn);}
TextureImageLoader.prototype.loadTexture=function(src,texture,callback){this.texture=texture;this.callback=callback;this.image.src=src;};function PendingTextureRequest(node,src,texture,callback){this.node=node;this.src=src;this.texture=texture;this.callback=callback;}
function releaseTextureImageLoader(til){if(pendingTextureRequests.length){var req=pendingTextureRequests.shift();til.loadTexture(req.src,req.texture,req.callback);}else
textureImageCache[cacheTop++]=til;}
for(var i=0;i<cacheTop;i++)
textureImageCache[i]=new TextureImageLoader();return function(node,src,callback,_crossOrigin){crossOrigin=_crossOrigin;var texture=gl.createTexture();if(cacheTop)
textureImageCache[--cacheTop].loadTexture(src,texture,callback);else
pendingTextureRequests.push(new PendingTextureRequest(node,src,texture,callback));return texture;};})();function processNextTile(node){loadTexture(node,node.path+'.'+image.extension,function(texture,loaded){node.texture=texture;node.textureLoaded=loaded?2:1;},globalParams.crossOrigin);}
function checkZoom(hfov){var newLevel=1;while(newLevel<image.maxLevel&&gl.drawingBufferWidth>image.tileResolution*Math.pow(2,newLevel-1)*Math.tan(hfov/2)*0.707){newLevel++;}
program.level=newLevel;}
function rotatePersp(p,r){return[p[0]*r[0],p[0]*r[1],p[0]*r[2],0,p[5]*r[4],p[5]*r[5],p[5]*r[6],0,p[10]*r[8],p[10]*r[9],p[10]*r[10],p[11],-r[8],-r[9],-r[10],0];}
function applyRotPerspToVec(m,v){return[m[0]*v[0]+m[1]*v[1]+m[2]*v[2],m[4]*v[0]+m[5]*v[1]+m[6]*v[2],m[11]+m[8]*v[0]+m[9]*v[1]+m[10]*v[2],1/(m[12]*v[0]+m[13]*v[1]+m[14]*v[2])];}
function checkInView(m,v){var vpp=applyRotPerspToVec(m,v);var winX=vpp[0]*vpp[3];var winY=vpp[1]*vpp[3];var winZ=vpp[2]*vpp[3];var ret=[0,0,0];if(winX<-1)
ret[0]=-1;if(winX>1)
ret[0]=1;if(winY<-1)
ret[1]=-1;if(winY>1)
ret[1]=1;if(winZ<-1||winZ>1)
ret[2]=1;return ret;}
function checkSquareInView(m,v){var check1=checkInView(m,v.slice(0,3));var check2=checkInView(m,v.slice(3,6));var check3=checkInView(m,v.slice(6,9));var check4=checkInView(m,v.slice(9,12));var testX=check1[0]+check2[0]+check3[0]+check4[0];if(testX==-4||testX==4)
return false;var testY=check1[1]+check2[1]+check3[1]+check4[1];if(testY==-4||testY==4)
return false;var testZ=check1[2]+check2[2]+check3[2]+check4[2];return testZ!=4;}
function handleWebGLError1286(){console.log('Reducing canvas size due to error 1286!');canvas.width=Math.round(canvas.width/2);canvas.height=Math.round(canvas.height/2);}}
var v=['attribute vec2 a_texCoord;','varying vec2 v_texCoord;','void main() {','gl_Position = vec4(a_texCoord, 0.0, 1.0);','v_texCoord = a_texCoord;','}'].join('');var vMulti=['attribute vec3 a_vertCoord;','attribute vec2 a_texCoord;','uniform mat4 u_cubeMatrix;','uniform mat4 u_perspMatrix;','varying mediump vec2 v_texCoord;','void main(void) {','gl_Position = u_perspMatrix * u_cubeMatrix * vec4(a_vertCoord, 1.0);','v_texCoord = a_texCoord;','}'].join('');var fragEquiCubeBase=['precision highp float;','uniform float u_aspectRatio;','uniform float u_psi;','uniform float u_theta;','uniform float u_f;','uniform float u_h;','uniform float u_v;','uniform float u_vo;','uniform float u_rot;','const float PI = 3.14159265358979323846264;','uniform sampler2D u_image0;','uniform sampler2D u_image1;','uniform bool u_splitImage;','uniform samplerCube u_imageCube;','varying vec2 v_texCoord;','uniform vec4 u_backgroundColor;','void main() {','float x = v_texCoord.x * u_aspectRatio;','float y = v_texCoord.y;','float sinrot = sin(u_rot);','float cosrot = cos(u_rot);','float rot_x = x * cosrot - y * sinrot;','float rot_y = x * sinrot + y * cosrot;','float sintheta = sin(u_theta);','float costheta = cos(u_theta);','float a = u_f * costheta - rot_y * sintheta;','float root = sqrt(rot_x * rot_x + a * a);','float lambda = atan(rot_x / root, a / root) + u_psi;','float phi = atan((rot_y * costheta + u_f * sintheta) / root);',].join('\n');var fragCube=fragEquiCubeBase+['float cosphi = cos(phi);','gl_FragColor = textureCube(u_imageCube, vec3(cosphi*sin(lambda), sin(phi), cosphi*cos(lambda)));','}'].join('\n');var fragEquirectangular=fragEquiCubeBase+['lambda = mod(lambda + PI, PI * 2.0) - PI;','vec2 coord = vec2(lambda / PI, phi / (PI / 2.0));','if(coord.x < -u_h || coord.x > u_h || coord.y < -u_v + u_vo || coord.y > u_v + u_vo)','gl_FragColor = u_backgroundColor;','else {','if(u_splitImage) {','if(coord.x < 0.0)','gl_FragColor = texture2D(u_image0, vec2((coord.x + u_h) / u_h, (-coord.y + u_v + u_vo) / (u_v * 2.0)));','else','gl_FragColor = texture2D(u_image1, vec2((coord.x + u_h) / u_h - 1.0, (-coord.y + u_v + u_vo) / (u_v * 2.0)));','} else {','gl_FragColor = texture2D(u_image0, vec2((coord.x + u_h) / (u_h * 2.0), (-coord.y + u_v + u_vo) / (u_v * 2.0)));','}','}','}'].join('\n');var fragMulti=['varying mediump vec2 v_texCoord;','uniform sampler2D u_sampler;','void main(void) {','gl_FragColor = texture2D(u_sampler, v_texCoord);','}'].join('');return{renderer:function(container,image,imagetype,dynamic){return new Renderer(container,image,imagetype,dynamic);}};})(window,document);